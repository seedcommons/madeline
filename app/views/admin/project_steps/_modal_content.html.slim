/ This section tag is out here so that show-view/edit-view classes affect the modal header, body, and footer
/ mode == :show_and_form means we are starting out in show mode and allowing the user to switch to edit
section.step-fields class=(@mode == :show_and_form ? 'show-view' : 'edit-view') data-id=@step.id
  div.modal-header
    h4.modal-title
      .view-element
        = @step.summary_or_none
      .form-element
        = t("project_step.#{@step.new_record? ? 'add' : 'edit'}")

  div.modal-body
    - if @mode == :show_and_form
      .show-actions
        a.edit-action.view-element
          i.fa.fa-pencil.fa-large>
          = t("project_step.edit")
        a.show-action.form-element
          i.fa.fa-close.fa-large>
          = t("cancel_edit")
        - if @step.persisted?
          a.delete-action [ data-confirm=t("project_step.confirm_deletion") ]
            i.fa.fa-trash.fa-large>
            = t("project_step.delete", count: 1)
      javascript:
        $(function() { new MS.Views.ShowEditView({ el: '.step-fields' }) });

    = simple_form_for([:admin, @step],
      wrapper: :horizontal_form_one_column,
      remote: true,
      html: {class: "form-horizontal project-step-form"},
      defaults: {input_html: {class: "form-element form-control"}},
      ) do |f|

      = hidden_field_tag(:context, context)

      = error_notification(f)

      // One column details section
      / Project
      - if @step.new_record?
        / Need to pass this through to create but not update.
        = f.hidden_field(:project_id)
      - else
        .view-element
          = f.input :project_id
            = link_to @project.display_name,
              send("admin_#{@project.model_name.singular}_tab_path", @project, tab: "details")

      / Summary & details
      .view-element
        = f.input :summary, wrapper_html: {class: 'hidden-print'}
          = @step.summary
        = f.input :details
          = simple_format @step.details.to_s
      .form-element
        = f.translatable_inputs do |l|
          = f.input "summary_#{l}".to_sym,
            input_html: {data: {translatable: 'summary'}},
            placeholder: I18n.t('common.summary', locale: l),
            label: I18n.t('common.summary', locale: l)
          = f.input "details_#{l}".to_sym, as: :text,
            input_html: {rows: 3, data: {translatable: 'details'}},
            placeholder: I18n.t('common.details', locale: l),
            label: I18n.t('common.details', locale: l)

      = f.input :parent_id
        .view-element = @step.parent.summary_or_none if @step.parent.present?
        = f.input_field :parent_id, collection: @parents.map { |i| [indented_option_label(i, :summary_or_none), i.id] },
            include_blank: false

      = f.input :schedule_parent_id
        .view-element = @step.schedule_parent.summary_or_none if @step.schedule_parent.present?
        = f.input_field :schedule_parent_id, collection: @precedents, label_method: :summary_or_none, include_blank: true

      = f.input :agent_id
        .view-element = @step.agent.try(:name)
        = f.input_field :agent_id, collection: @agents, include_blank: true

      // Two column details section
      br
      .row
        .col-sm-6
          = f.input :step_type_value, wrapper: :horizontal_form_two_columns
            .view-element = @step.step_type_label
            = f.input_field :step_type_value,
              collection: ProjectStep.step_type_option_set.translated_list,
              include_blank: false

          // is_finalized? is not used because this input is used as a CSS selector
          = f.input :is_finalized, wrapper: :horizontal_form_two_columns
            - if @step.is_finalized_locked?
              .static-text-as-field
                = @step.is_finalized? ? t("reply_yes") : t("reply_no")
                =< "(#{t('locked')})"
            - else
              .view-element = @step.is_finalized? ? t("reply_yes") : t("reply_no")
              = f.input_field :is_finalized, as: :boolean, boolean_style: :inline

          - if @step.old_start_date && @step.is_finalized?
            = f.input :old_start_date, wrapper: :horizontal_form_two_columns
              - if policy(@step).edit_finalized_dates?
                = f.input_field :old_start_date, as: :date_picker
                .view-element
                  = ldate(@step.old_start_date)
              - else
                .static-text-as-field = ldate(@step.old_start_date)

          = f.input :scheduled_start_date, wrapper: :horizontal_form_two_columns
            - unless @step.schedule_parent
              .view-element = ldate(@step.scheduled_start_date)
            .static-text-as-field = ldate(@step.scheduled_start_date)
            = f.input_field :scheduled_start_date, as: :date_picker

        .col-sm-6
          - if @step.old_duration_days && @step.old_duration_days > 0 && @step.is_finalized?
            = f.input :old_duration_days, wrapper: :horizontal_form_two_columns
              - if policy(@step).edit_finalized_dates?
                .view-element
                  = @step.old_duration_days
                  =< t("project_step.days")
                .form-element
                  = f.input_field :old_duration_days
                  = t("project_step.days")
              - else
                .static-text-as-field
                  = @step.old_duration_days
                  =< t("project_step.days")

          = f.input "duration", wrapper: :horizontal_form_two_columns
            .view-element
              - if @step.scheduled_duration_days && @step.scheduled_duration_days > 0
                = @step.scheduled_duration_days
                =< t("project_step.days")
            .form-element
              = f.input_field :scheduled_duration_days
              = t("project_step.days")

          = f.input :scheduled_end_date, wrapper: :horizontal_form_two_columns
            .static-text-as-field = ldate(@step.scheduled_end_date)

          = f.input :actual_end_date, wrapper: :horizontal_form_two_columns
            .view-element = ldate(@step.actual_end_date)
            = f.input_field :actual_end_date, as: :date_picker

    section.log-list
      = render "admin/project_logs/log_list", context: context if @step.logs_count > 0

  div.modal-footer
    .view-element
      button.btn.btn-primary.cancel type="button" = t(:close)
    .form-element
      button.btn.btn-default.cancel type="button" = t(:cancel)
      button.btn.btn-primary.submit = t(:submit)

javascript:
 $(function() {
   new MS.Views.LogListView({
     el: 'section.log-list',
     refreshUrl: #{json "/admin/logs?project=#{@project.id}"},
     logFormModal: $('#log-form-modal')
   });
 });
